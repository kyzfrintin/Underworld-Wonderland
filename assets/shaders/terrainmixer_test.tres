[gd_resource type="ShaderMaterial" load_steps=13 format=2]

[ext_resource path="res://assets/textures/terrain/aerial_ground_rock_diff_2k.jpg" type="Texture" id=1]
[ext_resource path="res://assets/textures/terrain/Ground037_2K_Color.jpg" type="Texture" id=2]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
output_port_for_preview = 0
uniform_name = "Noise"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 0.6 ]

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 20, 20, 20 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=7]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 10, 10 ) ]
operator = 2

[sub_resource type="VisualShader" id=8]
code = "shader_type spatial;
uniform sampler2D tex_frg_6;
uniform sampler2D tex_frg_2;
uniform sampler2D Noise;



void vertex() {
// Output:0

}

void fragment() {
// Input:7
	vec3 n_out7p0 = vec3(UV, 0.0);

// VectorOp:9
	vec3 n_in9p1 = vec3(10.00000, 10.00000, 10.00000);
	vec3 n_out9p0 = n_out7p0 * n_in9p1;

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, n_out9p0.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// VectorOp:8
	vec3 n_in8p1 = vec3(20.00000, 20.00000, 20.00000);
	vec3 n_out8p0 = n_out7p0 * n_in8p1;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out8p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(Noise, UV.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// VectorScalarMix:4
	vec3 n_out4p0 = mix(n_out6p0, n_out2p0, dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)));

// Output:0
	ALBEDO = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -98.9431, -151.317 )
nodes/fragment/0/position = Vector2( 840, 60 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 140, 300 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 480, -80 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 546, 242 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( 80, -60 )
nodes/fragment/7/node = SubResource( 5 )
nodes/fragment/7/position = Vector2( -640, 80 )
nodes/fragment/8/node = SubResource( 6 )
nodes/fragment/8/position = Vector2( -440, 260 )
nodes/fragment/9/node = SubResource( 7 )
nodes/fragment/9/position = Vector2( -460, 60 )
nodes/fragment/connections = PoolIntArray( 4, 0, 0, 0, 2, 0, 4, 1, 7, 0, 8, 0, 8, 0, 2, 0, 6, 0, 4, 0, 3, 0, 4, 2, 7, 0, 9, 0, 9, 0, 6, 0 )

[sub_resource type="OpenSimplexNoise" id=9]
seed = 67
period = 59.3
lacunarity = 0.64

[sub_resource type="NoiseTexture" id=10]
noise = SubResource( 9 )

[resource]
shader = SubResource( 8 )
shader_param/Noise = SubResource( 10 )
