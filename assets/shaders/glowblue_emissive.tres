[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeScalarConstant" id=1]
constant = 1.0

[sub_resource type="VisualShaderNodeColorConstant" id=2]
constant = Color( 0.832031, 0.0325012, 0.0325012, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=3]
output_port_for_preview = 1
constant = Color( 0.437607, 0.882367, 0.941406, 1 )

[sub_resource type="VisualShader" id=4]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode blend_add, shadows_disabled;




void vertex() {
// Output:0

}

void fragment() {
// Color:3
	vec3 n_out3p0 = vec3(0.832031, 0.032501, 0.032501);
	float n_out3p1 = 1.000000;

// Scalar:2
	float n_out2p0 = 1.000000;

// Color:4
	vec3 n_out4p0 = vec3(0.437607, 0.882367, 0.941406);
	float n_out4p1 = 1.000000;

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = n_out2p0;
	EMISSION = n_out4p0;
	AO = n_out4p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -208, 139 )
modes/blend = 1
flags/shadows_disabled = true
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -120, 280 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 40, 180 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -30, 388 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 2, 0, 0, 1, 4, 0, 0, 5, 4, 1, 0, 6 )

[resource]
shader = SubResource( 4 )
